import 'package:flutter/material.dart';
import '../util.dart';

class VulnerabilityForm extends StatefulWidget {
  const VulnerabilityForm({Key? key}) : super(key: key);

  @override
  _VulnerabilityFormState createState() => _VulnerabilityFormState();
}

class _VulnerabilityFormState extends State<VulnerabilityForm> with AutomaticKeepAliveClientMixin {
  @override
  bool get wantKeepAlive => true;

  static const BorderRadius borderRadiusCached = BorderRadius.all(Radius.circular(20.0));

  //
  // ----------------------------- Data for this form -----------------------------
  //
  List<Pair<bool, String>> data = [
    Pair(false,
        "The building is built on sloped ground with access at two or more levels, i.e., at ground, intermediate floor and roof."),
    Pair(false, "High water table (-1)"),
    Pair(false, "Soil with moisture (-2)"),
    Pair(false, "Soft Soil"),
    Pair(false, "Weak Soil"),
    Pair(false, "Footings on non-uniform soil with no tie beams (-3)"),
    Pair(false, "Footings on non-uniform soil with tie beams (-1)"),
    Pair(false, "Footings on soft soil with no tie beams (-3)"),
    Pair(false, "Footings on soft soil with tie beams (-1)"),
    Pair(false, "Mat foundation on non-uniform soil (-2)"),
  ];

  Widget dataCheckboxListTile(int index) {
    return CheckboxListTile(
      value: data[index].a,
      onChanged: (val) {
        setState(() {
          data[index].a = val!;
        });
      },
      dense: true,
      contentPadding: const EdgeInsets.fromLTRB(0, 0, 0, 0),
      title: Text(
        data[index].b,
        style: Theme.of(context).textTheme.caption,
      ),
    );
  }

  //
  // ----------------------------- Economic Loss Inducing Factors -----------------------------
  //
  Widget buildEconomicLossInducingFactors() {
    return Card(
      shape: const RoundedRectangleBorder(borderRadius: borderRadiusCached),
      child: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              "Economic Loss Inducing Factors",
              style: Theme.of(context).textTheme.headline6,
            ),
            const SizedBox(height: 40),
            Text(
              "Siting Issues",
              style: Theme.of(context).textTheme.labelLarge,
            ),
            dataCheckboxListTile(0),
          ],
        ),
      ),
    );
  }

  //
  // ----------------------------- Soil and Foundation Condition (-5%) -----------------------------
  //
  Widget buildSoilFoundationCondition() {
    return Card(
      shape: const RoundedRectangleBorder(borderRadius: borderRadiusCached),
      child: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              "Soil and Foundation Condition (-5%)",
              style: Theme.of(context).textTheme.headline6,
            ),
            const SizedBox(height: 40),
            Text(
              "Sustainability of Soil Type",
              style: Theme.of(context).textTheme.labelLarge,
            ),
            dataCheckboxListTile(1),
            dataCheckboxListTile(2),
            dataCheckboxListTile(3),
            dataCheckboxListTile(4),
            const SizedBox(height: 25),
            Text(
              "Foundation",
              style: Theme.of(context).textTheme.labelLarge,
            ),
            dataCheckboxListTile(5),
            dataCheckboxListTile(6),
            dataCheckboxListTile(7),
            dataCheckboxListTile(8),
          ],
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    super.build(context);
    return SingleChildScrollView(
      child: Padding(
        padding: EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            buildEconomicLossInducingFactors(),
            const SizedBox(height: 20),
            buildSoilFoundationCondition(),
          ],
        ),
      ),
    );
  }
}
